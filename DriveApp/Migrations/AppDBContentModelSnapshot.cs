// <auto-generated />
using System;
using DriveApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DriveApp.Migrations
{
    [DbContext(typeof(AppDBContent))]
    partial class AppDBContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DriveApp.Data.Models.Advertisements", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("priceInside")
                        .HasColumnType("float");

                    b.Property<double>("priceOutside")
                        .HasColumnType("float");

                    b.Property<int>("vehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("vehicleIdNavigationid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("vehicleIdNavigationid");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Drivers", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("driverLicense")
                        .HasColumnType("int");

                    b.Property<string>("fio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("photoId")
                        .HasColumnType("int");

                    b.Property<int?>("photoIdNavigationid")
                        .HasColumnType("int");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("photoIdNavigationid");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Employment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("finishTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time");

                    b.Property<int>("timetableId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("timetableId");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Images", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("filename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Timetable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("driverId")
                        .HasColumnType("int");

                    b.Property<int?>("driverIdNavigationid")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("finishTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time");

                    b.HasKey("id");

                    b.HasIndex("driverIdNavigationid");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Trucks", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<double>("capacity")
                        .HasColumnType("float");

                    b.Property<double>("loadCapacity")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int?>("roleIdNavigationid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("roleIdNavigationid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Vehicles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<int?>("categoryIdNavigationid")
                        .HasColumnType("int");

                    b.Property<int>("driverId")
                        .HasColumnType("int");

                    b.Property<int?>("driverIdNavigationid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("photoId")
                        .HasColumnType("int");

                    b.Property<int?>("photoIdNavigationid")
                        .HasColumnType("int");

                    b.Property<int>("seats")
                        .HasColumnType("int");

                    b.Property<int>("yearOfIssue")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryIdNavigationid");

                    b.HasIndex("driverIdNavigationid");

                    b.HasIndex("photoIdNavigationid");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Advertisements", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Vehicles", "vehicleIdNavigation")
                        .WithMany("Advertisements")
                        .HasForeignKey("vehicleIdNavigationid");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Drivers", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Users", "idNavigation")
                        .WithOne("drivers")
                        .HasForeignKey("DriveApp.Data.Models.Drivers", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DriveApp.Data.Models.Images", "photoIdNavigation")
                        .WithMany("drivers")
                        .HasForeignKey("photoIdNavigationid");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Employment", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Timetable", "timetableIdNavigation")
                        .WithMany("employment")
                        .HasForeignKey("timetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DriveApp.Data.Models.Timetable", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Drivers", "driverIdNavigation")
                        .WithMany("timetable")
                        .HasForeignKey("driverIdNavigationid");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Trucks", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Vehicles", "idNavigation")
                        .WithOne("trucks")
                        .HasForeignKey("DriveApp.Data.Models.Trucks", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DriveApp.Data.Models.Users", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Roles", "roleIdNavigation")
                        .WithMany("users")
                        .HasForeignKey("roleIdNavigationid");
                });

            modelBuilder.Entity("DriveApp.Data.Models.Vehicles", b =>
                {
                    b.HasOne("DriveApp.Data.Models.Categories", "categoryIdNavigation")
                        .WithMany("vehicles")
                        .HasForeignKey("categoryIdNavigationid");

                    b.HasOne("DriveApp.Data.Models.Drivers", "driverIdNavigation")
                        .WithMany("vehicles")
                        .HasForeignKey("driverIdNavigationid");

                    b.HasOne("DriveApp.Data.Models.Images", "photoIdNavigation")
                        .WithMany("vehicles")
                        .HasForeignKey("photoIdNavigationid");
                });
#pragma warning restore 612, 618
        }
    }
}
